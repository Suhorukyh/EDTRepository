
Процедура ПередЗаписью(Отказ)
	если Отказ или ПометкаУдаления или ОбменДанными.Загрузка тогда
		возврат;
	конецесли;
	
	если не ЭтоГруппа и не УправлениеПользователямиСервер.ДоступноРедактированиеПользователя(Ссылка) тогда
		Сообщить("Запрещено редактирование пользователя: " + Строка(Ссылка));
		Отказ = истина;
		возврат;
	конецесли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования.Ссылка);
	
	ИдентификаторПользователяИБ = Неопределено;
	ИдентификаторПользователяСервиса = Неопределено;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	перем НаборЗаписей, Запись;
	перем Выборка, Значение, Количество;
	
	если Отказ или ПометкаУдаления или ОбменДанными.Загрузка тогда
		возврат;
	конецесли;
	
	если ЭтоГруппа тогда
		возврат;
	конецесли;
	
	// добавляем настройки, если у пользователя нет настроек (т.е. новый или не настроенный)
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	если НаборЗаписей.Количество() = 0 тогда
		// ищем организацию
		
		Выборка = Справочники.Организации.Выбрать();
		Количество = 0;
		пока Выборка.Следующий() цикл
			Значение = Выборка.Ссылка;
			Количество = Количество + 1;
		конеццикла;
		
		если Количество = 1 тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Пользователь = Ссылка;
			Запись.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация;
			Запись.Значение = Значение;
		конецесли;
		
		// ищем структурную единицу
		
		если Количество = 1 тогда
			Выборка = Справочники.СтруктурныеЕдиницы.Выбрать(, Значение);
			Количество = 0;
			пока Выборка.Следующий() цикл
				Значение = Выборка.Ссылка;
				Количество = Количество + 1;
			конеццикла;
		конецесли;
		
		если Количество = 1 тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Пользователь = Ссылка;
			Запись.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяСтруктурнаяЕдиница;
			Запись.Значение = Значение;
		конецесли;
		
		если НаборЗаписей.Количество() > 0 тогда
			НаборЗаписей.Записать();
		конецесли;
	конецесли;
	
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	перем ПользовательИБ;
	
	если не ЭтоГруппа тогда
		УстановитьПривилегированныйРежим(истина);
		
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
		если ПользовательИБ <> неопределено тогда
			ПользовательИБ.Удалить();
		конецесли;
		
		УстановитьПривилегированныйРежим(ложь);
	конецесли;
КонецПроцедуры
