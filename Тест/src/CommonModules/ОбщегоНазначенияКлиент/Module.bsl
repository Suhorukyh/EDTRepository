
// определить текущую подсистему по активному окну - не работает в 8.3
Функция ТекущаяПодсистема()
	перем Окно;
	перем Подсистема, Позиция;
	
	Окно = АктивноеОкно();
	если Окно = неопределено тогда
		возврат неопределено;
	конецесли;
	
	Подсистема = СтрЗаменить(Окно.ПолучитьНавигационнуюСсылку(), "e1cib/navigationpoint/", "");
	
	Позиция = Найти(Подсистема, "/");
	если Позиция > 0 тогда
		Подсистема = Лев(Подсистема, Позиция - 1);
	конецесли;
	
	возврат Подсистема;
КонецФункции

// добавить отбор и сортировку
Функция ДобавитьГруппуОтбора(ОбластьДобавления, ТипГруппы, Представление = неопределено, Использование = истина, РежимОтображенияНедоступный = ложь, ИдентификаторПользовательскойНастройки = неопределено) Экспорт
	перем ГруппаОтбора, Найдено;
	
	Найдено = ложь;
	
	если ЗначениеЗаполнено(Представление) тогда
		для каждого ЭлементОтбора из ОбластьДобавления.Элементы цикл
			если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") и ЭлементОтбора.Представление = Представление тогда
				Найдено = истина;
				прервать;
			конецесли;
		конеццикла;
	конецесли;
	
	если не Найдено тогда
		ГруппаОтбора = ОбластьДобавления.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.Представление = Представление;
	конецесли;
	
	ГруппаОтбора.ТипГруппы = ТипГруппы;
	ГруппаОтбора.Использование = Использование;
	//ГруппаОтбора.РежимОтображения = ?(РежимОтображения <> неопределено, РежимОтображения, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	ГруппаОтбора.РежимОтображения = ?(РежимОтображенияНедоступный, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	
	если ИдентификаторПользовательскойНастройки <> неопределено тогда
		ГруппаОтбора.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройки;
	иначеесли ГруппаОтбора.РежимОтображения <> РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный тогда
		//ГруппаОтбора.ИдентификаторПользовательскойНастройки = Строка(ТипГруппы);
	конецесли;
	
	возврат ГруппаОтбора;
КонецФункции
Функция ДобавитьЭлементОтбора(ОбластьДобавления, ИмяПоля, Значение = неопределено, ВидСравнения = неопределено, Представление = неопределено, Использование = истина, РежимОтображенияНедоступный = ложь, ИдентификаторПользовательскойНастройки = неопределено) Экспорт
	перем ЭлементОтбора, Найдено;
	
	Найдено = ложь;
	
	если ЗначениеЗаполнено(Представление) тогда
		для каждого ЭлементОтбора из ОбластьДобавления.Элементы цикл
			если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") и ЭлементОтбора.Представление = Представление тогда
				Найдено = истина;
				прервать;
			конецесли;
		конеццикла;
	конецесли;
	
	если не Найдено тогда
		ЭлементОтбора = ОбластьДобавления.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Представление = Представление;
	конецесли;
	
	ЭлементОтбора.ЛевоеЗначение =  новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбора.ПравоеЗначение = Значение;
	ЭлементОтбора.ВидСравнения = ?(ВидСравнения <> неопределено, ВидСравнения, ВидСравненияКомпоновкиДанных.Равно);
	ЭлементОтбора.Представление = Представление;
	ЭлементОтбора.Использование = Использование;
	//ЭлементОтбора.РежимОтображения = ?(РежимОтображения <> неопределено, РежимОтображения, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	ЭлементОтбора.РежимОтображения = ?(РежимОтображенияНедоступный, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	
	если ИдентификаторПользовательскойНастройки <> неопределено тогда
		ЭлементОтбора.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройки;
	иначеесли ЭлементОтбора.РежимОтображения <> РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный тогда
		//ЭлементОтбора.ИдентификаторПользовательскойНастройки = ИмяПоля;
	конецесли;
	
	возврат ЭлементОтбора;
КонецФункции
Функция ДобавитьЭлементПорядка(ОбластьДобавления, ИмяПоля, ТипУпорядочивания = неопределено, Использование = истина, РежимОтображения = неопределено) Экспорт
	перем ЭлементПорядка;
	
	ЭлементПорядка = ОбластьДобавления.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядка.Поле = новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементПорядка.ТипУпорядочивания = ?(ТипУпорядочивания <> неопределено, ТипУпорядочивания, НаправлениеСортировкиКомпоновкиДанных.Возр);
	ЭлементПорядка.Использование = Использование;
	ЭлементПорядка.РежимОтображения = ?(РежимОтображения <> неопределено, РежимОтображения, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	
	возврат ЭлементПорядка;
КонецФункции

// получить отбор
Функция ПолучитьОтбор(Настройки) Экспорт
	перем Элемент;
	
	для каждого Элемент из Настройки.Элементы цикл
		если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных") тогда
			возврат Элемент;
		конецесли;
	конеццикла;
	
	возврат новый ОтборКомпоновкиДанных;
КонецФункции

// защита от автоматических нажатий
Функция ПодтвердитьДействияПользователя() Экспорт
	перем Генератор, Значение1, Значение2;
	перем Значение, Текст, Результат;
	
	Генератор = новый ГенераторСлучайныхЧисел();
	Значение1 = Генератор.СлучайноеЧисло(1, 99);
	Значение2 = Генератор.СлучайноеЧисло(1, 99);
	
	Значение = Значение1 + Значение2;
	Текст = Строка(Значение1) + " + " + Строка(Значение2) + " = ?";
	
	если не ВвестиЗначение(Результат, Текст, Тип("Число")) тогда
		возврат ложь;
	иначеесли Результат <> Значение тогда
		Предупреждение("Неправильный ответ", 10);
		возврат ложь;
	иначе
		возврат истина;
	конецесли;
КонецФункции

Функция КаталогРабочийСтол() Экспорт
	перем WSS;
	
	попытка
		WSS = новый COMОбъект("WScript.Shell");
		возврат WSS.SpecialFolders().Item("Desktop");
	исключение
		возврат неопределено;
	конецпопытки;
КонецФункции
